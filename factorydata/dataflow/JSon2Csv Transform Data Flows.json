{
	"name": "JSon2Csv Transform Data Flows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BlobStoreSource",
						"type": "DatasetReference"
					},
					"name": "Source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureBlobStoreCsv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Flatten1"
				},
				{
					"name": "Unpivot1"
				},
				{
					"name": "Select2"
				}
			],
			"script": "source(output(\n\t\thelp as string,\n\t\tsuccess as boolean,\n\t\tresult as (include_total as boolean, resource_id as string, fields as (type as string, id as string)[], records_format as string, records as ({_id} as string, Ilce as string, {2015.0} as string, {2016.0} as string, {2017.0} as string, {2018.0} as string, {2019.0} as string)[], limit as string, {_links} as (start as string, next as string), total as string)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> Source\nSource select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 foldDown(unroll(result.records, result.records),\n\tmapColumn(\n\t\t{_id} = result.records.{_id},\n\t\tIlce = result.records.Ilce,\n\t\t{2015} = result.records.{2015.0},\n\t\t{2016} = result.records.{2016.0},\n\t\t{2017} = result.records.{2017.0},\n\t\t{2018} = result.records.{2018.0},\n\t\t{2019} = result.records.{2019.0}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nSelect2 unpivot(output(\n\t\tyil as integer,\n\t\tTuketim as string\n\t),\n\tungroupBy(Ilce),\n\tlateral: false,\n\tignoreNullPivots: false) ~> Unpivot1\nFlatten1 select(mapColumn(\n\t\tIlce,\n\t\t{2015},\n\t\t{2016},\n\t\t{2017},\n\t\t{2018},\n\t\t{2019}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nUnpivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['output.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}