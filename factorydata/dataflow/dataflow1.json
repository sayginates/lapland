{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sonuc",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sonuc",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\thelp as string,\n\t\tsuccess as boolean,\n\t\tresult as (include_total as boolean, resource_id as string, fields as (type as string, id as string)[], records_format as string, records as ({_id} as string, Ilce as string, {2015.0} as string, {2016.0} as string, {2017.0} as string, {2018.0} as string, {2019.0} as string)[], limit as string, {_links} as (start as string, next as string), total as string)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nSelect1 derive(result = result.records) ~> DerivedColumn1\nsource1 select(mapColumn(\n\t\tresult\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn1 sink(input(\n\t\thelp as string,\n\t\tsuccess as boolean,\n\t\tresult as (include_total as boolean, resource_id as string, fields as (type as string, id as string)[], records_format as string, records as ({_id} as string, Ilce as string, {2015.0} as string, {2016.0} as string, {2017.0} as string, {2018.0} as string, {2019.0} as string)[], limit as string, {_links} as (start as string, next as string), total as string)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}